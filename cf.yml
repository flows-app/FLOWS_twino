AWSTemplateFormatVersion: '2010-09-09'
Description: "flows twino"
Resources:
  newbalanceFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: newbalance
      Handler: main.handler
      Role:
        Fn::GetAtt: [ LambdaRole , Arn ]
      Runtime: python3.6
      Timeout: 300
  newbalanceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${newbalanceFunction}"
      RetentionInDays: 7
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
  InvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
            - 321232316075
            - 184705290838
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: LambdaRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              Resource:
              - Fn::GetAtt: [ newbalanceFunction , Arn ]
Outputs:
  newbalanceFunction:
    Description: 'newbalance'
    Value:
      Fn::GetAtt: [ newbalanceFunction , Arn ]
  newbalanceRole:
    Description: 'newbalance'
    Value:
      Fn::GetAtt: [ InvokeRole , Arn ]
